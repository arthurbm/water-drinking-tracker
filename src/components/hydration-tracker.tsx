/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/0IsULnLly42
 */
import { revalidatePath } from "next/cache";
import { auth } from "@/app/auth";
import { Button } from "@/components/ui/button";
import { addCup, getDailyIntake, getUser, removeCup } from "@/lib/actions";

export async function HydrationTracker() {
  let session = await auth();
  const user = await getUser(session?.user?.email as string);

  const waterIntakes = await getDailyIntake(user.id, new Date());

  function getDayFromDate(dateString: string) {
    const date = new Date(dateString);

    const days = [
      "Domingo",
      "Segunda",
      "Terça",
      "Quarta",
      "Quinta",
      "Sexta",
      "Sábado",
    ];
    return days[date.getDay()];
  }

  return (
    <div className="flex flex-col items-center justify-center gap-4 p-4 md:gap-8 md:p-10">
      <div className="flex flex-col items-center gap-2">
        <h1 className="text-3xl font-bold">Rastreador de hidratação</h1>
        <p className="text-center text-gray-500 dark:text-gray-400">
          Toque nos botões para monitorar sua ingestão de água. Fique hidratada!
        </p>
      </div>
      <div className="flex flex-col items-center gap-2">
        <div className="flex items-center gap-2">
          <div className="flex items-center gap-2">
            <GlassWaterIcon className="h-6 w-6" />
            <span className="text-2xl font-semibold">
              {waterIntakes[0].cups}
            </span>
          </div>
          <span className="text-2xl">/ ??</span>
        </div>
        <div className="grid w-full gap-4 md:grid-cols-2">
          <form
            action={async () => {
              "use server";
              await addCup(user.id, new Date());
              revalidatePath("/home");
            }}
          >
            <Button className="w-full" variant="outline">
              + 1 Copo
            </Button>
          </form>
          <form
            action={async () => {
              "use server";
              await removeCup(user.id, new Date());
              revalidatePath("/home");
            }}
          >
            <Button className="w-full" variant="outline">
              - 1 Copo
            </Button>
          </form>
        </div>
      </div>
      <div className="flex w-full max-w-sm flex-col gap-4">
        {waterIntakes.map((waterIntake) => (
          <div
            key={waterIntake.id}
            className="flex items-center justify-between"
          >
            <div className="text-sm">{getDayFromDate(waterIntake.date)}</div>
            <div className="flex items-center gap-2">
              {/* make a map for GlassWaterIcon to appear the amount that waterIntake.cups has */}
              {Array.from({ length: waterIntake.cups }).map((_, index) => (
                <GlassWaterIcon key={index} />
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

function GlassWaterIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z" />
      <path d="M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0" />
    </svg>
  );
}
